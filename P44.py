## Problem 44

## Pentagonal numbers are generated by the formula, P^n=n(3n−1)/2. The first ten pentagonal numbers are:

## 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

## It can be seen that P^4 + P^7 = 22 + 70 = 92 = P^8. 
## However, their difference, 70 − 22 = 48, is not pentagonal.

## Find the pair of pentagonal numbers, P^j and P^k, for which their sum and difference 
## are pentagonal and D = |P^k − P^j| is minimised; what is the value of D?

# function to find minimised difference of absolute value of two pentagonal numbers for which sum and difference are pentagonal
def Pen():

	import timeit # import timeit and start timer to measure time of function
	start = timeit.default_timer()
	
	for i in range(1,3000): # upward bound iterated in code as no determination of how to figure
	
		for j in range(1,3000): 
			
			# test all conditions of problem above
			if is_Pent(i*(3*i-1)/2) and is_Pent(j*(3*j-1)/2) and is_Pent(abs((i*(3*i-1)/2)-(j*(3*j-1)/2))) and is_Pent((i*(3*i-1)/2) + (j*(3*j-1)/2)):
			
				print i, j # return only one solution which assumed was correct
			
	# stop timer and print total elapsed time
	stop = timeit.default_timer()
	print "Total time:", stop - start 			

# function to determine whether number is pentagonal	
def is_Pent(n):	
	
	if (((24*n+1)**.5+1) / 6).is_integer():
		return True
	
	else:
		return False	